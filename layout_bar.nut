function returngly(){
	local uniglyph = [" ","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""]
	return (uniglyph)
}

local uniglyphs = returngly()

function gly(index){
	local unizero = 0xe900
	try {return (uniglyphs[index - unizero + 1])} catch (err) {return ""}
}

local bar = {
	pic = null
	thread = null
	pos = 0
	redraw = false
	time0 = 0
	time1 = 0
}

bar.pic = fe.add_text("",0,0,300,300)
bar.pic.font = "fonts/font_glyphs.ttf"
bar.pic.margin = 0
bar.pic.align = Align.MiddleCentre
bar.pic.charsize = 200
bar.pic.zorder = 100000
bar.pic.word_wrap = true
bar.pic.set_bg_rgb(200,0,0)


local arr = array(1000000,1)

function bar_run(functiontorun){
	bar.thread = newthread(functiontorun)
	bar.thread.call()
}

function bar_init(){
	bar.redraw = true
	bar.time0 = clock()
	bar.time1 = bar.time0
}


function bar_update(i, max, span){
	bar.time1 = clock()
	if ((floor(span*i*1.0/max) != bar.pos) && (bar.time1 - bar.time0 >= 1.0/ScreenRefreshRate)) {
		bar.pos = floor(span*i*1.0/max)
		bar.time0 = bar.time1
		suspend()
	}
}

function bar_close(span){
	bar.pos = span
	suspend()
	bar.redraw = false
}

function refresher_X(){
	bar_init()
	foreach (i, item in arr){
		// DO SOMETHING HERE
		bar_update(i,arr.len(),10)
	}
	bar_close(10)
}

function refresher_Y(){
	bar_init()
	foreach (i, item in arr){
		// DO SOMETHING ELSE
		bar_update(i,arr.len(),10)
	}
	bar_close(10)
}


fe.add_signal_handler( "on_signal" )
fe.add_transition_callback( "on_transition" )
fe.add_ticks_callback(  "tick" )

function on_transition( ttype, var0, ttime ) {
	return false
}

function tick( tick_time ) {
	if (bar.redraw) {
		bar.pic.msg = gly(0xeafb+bar.pos)
		bar.thread.wakeup()
		return //only update bar
	}
}

function on_signal( sig ){
	if (bar.redraw) return //no signals when bar is running

	if (sig == "custom1") bar_run(refresher_X)
	if (sig == "custom2") bar_run(refresher_Y)

	return false
}